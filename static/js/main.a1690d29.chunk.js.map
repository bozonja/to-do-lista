{"version":3,"sources":["komponente/Header.js","komponente/ToDoItem.js","komponente/ToDoList.js","komponente/AddToDoItem.js","komponente/AboutApp.js","App.js","index.js"],"names":["linkStyle","color","Header","className","to","style","ToDoItem","ifCompletedAddLineThrough","textDecoration","props","toDoItemData","completed","this","id","title","type","onChange","toggleCompleted","bind","onClick","delToDoItem","Component","ToDoList","getToDoListData","map","key","AddToDoItem","state","onSubmit","e","preventDefault","addToDoItem","setState","target","name","value","placeholder","flex","About","backgroundColor","padding","App","todolistdata","axios","delete","then","response","filter","post","data","get","exact","path","render","komponente","component","AboutApp","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1690d29.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>ToDo List</h1>\r\n      <Link to=\"/to-do-lista\" style={linkStyle}> Home </Link> | \r\n      <Link to=\"/about\" style={linkStyle}> About App </Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst linkStyle = {\r\n  color: 'white'\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ToDoItem extends Component {\r\n\r\n  ifCompletedAddLineThrough = () => {\r\n    return {\r\n      textDecoration: this.props.toDoItemData.completed ?\r\n      'line-through' : 'none'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {id, title} = this.props.toDoItemData;\r\n    return (\r\n      <div style={this.ifCompletedAddLineThrough()} className=\"todo-item\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <input type=\"checkbox\" onChange={this.props.toggleCompleted.bind\r\n          (this, id)} /> {''}\r\n          {title}\r\n          <button \r\n            onClick={this.props.delToDoItem.bind(this, id)}\r\n            className=\"todo-item-button\">x</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nToDoItem.propTypes = {\r\n  toDoItemData: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ToDoItem;","import React, { Component } from 'react';\r\nimport ToDoItem from \"./ToDoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ToDoList extends Component {\r\n\r\n  render() {\r\n    return this.props.getToDoListData.map((toDoItemData) => (\r\n      <ToDoItem \r\n        key={toDoItemData.id} \r\n        toDoItemData={toDoItemData} \r\n        toggleCompleted={this.props.toggleCompleted}\r\n        delToDoItem={this.props.delToDoItem}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nToDoList.propTypes = {\r\n  getToDoListData: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ToDoList;","import React, { Component } from 'react'\r\n\r\nclass AddToDoItem extends Component {\r\n\r\n  state = {\r\n    title: ''\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addToDoItem(this.state.title);\r\n    this.setState({title: ''})\r\n  }\r\n\r\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"d-flex\">\r\n        <input \r\n          type=\"text\" \r\n          name=\"title\" \r\n          placeholder=\"Type your todo thing here\"\r\n          style={{flex: '10'}}\r\n          value={this.state.title}\r\n          onChange={this.onChange}  \r\n        />\r\n        <input type=\"submit\" value=\"submit\" style={{flex: '2'}} className=\"btn\"/>\r\n      </form>\r\n    ) \r\n\r\n  }\r\n}\r\n\r\nexport default AddToDoItem;","import React from 'react'\r\n\r\nfunction About() {\r\n  return (\r\n   <div style={{backgroundColor: 'white', padding: '2rem'}}>\r\n      <h1>About App</h1>\r\n      <p>This app is created by Josip Markovic according tutorial \"react crash \r\n        course\" by Traversy Media. I did this so I can practice react</p>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport Header from './komponente/Header';\r\nimport ToDoList from './komponente/ToDoList';\r\nimport AddToDoItem from './komponente/AddToDoItem';\r\nimport AboutApp from './komponente/AboutApp'\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    todolistdata: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\r\n    .then(response => this.setState({todolistdata: response.data}))\r\n  } \r\n\r\n  toggleCompleted = (id) => {\r\n    this.setState({todolistdata : this.state.todolistdata.map(toDoItemData => {\r\n      if(toDoItemData.id === id) {\r\n        toDoItemData.completed = !toDoItemData.completed\r\n      }\r\n      return toDoItemData;\r\n    })});\r\n  }\r\n\r\n  delToDoItem = (id) => {\r\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n    .then(response => this.setState({todolistdata: \r\n      [...this.state.todolistdata.filter(toDoItemData => \r\n      toDoItemData.id !== id)]}))\r\n\r\n  }\r\n\r\n  addToDoItem = (title) => {\r\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\r\n      title,\r\n      completed: false\r\n    })\r\n    .then(response => this.setState({todolistdata: \r\n      [...this.state.todolistdata, response.data] }))\r\n  }\r\n\r\n  render() {  \r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <div className=\"container\">\r\n            <Header />\r\n            <Route exact path=\"/to-do-lista\" render={komponente => (\r\n              <div>\r\n                <AddToDoItem addToDoItem={this.addToDoItem}/>\r\n                <ToDoList \r\n                  getToDoListData={this.state.todolistdata} \r\n                  toggleCompleted={this.toggleCompleted}\r\n                  delToDoItem={this.delToDoItem}\r\n                />\r\n              </div>\r\n            )} />\r\n            <Route path=\"/about\" component={AboutApp} />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}